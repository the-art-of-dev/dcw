apiVersion: v1
kind: Service
metadata:
  annotations:
    dcw.kompose.service.loadbalancerip: 10.10.10.11
    dcw.svc_groups: web-apps,full
    kompose.cmd: kompose convert -f ./hacking/k8s.test-svc-web-app-client.yml.tmp.yml
      --stdout
    kompose.version: 1.30.0 (9d8dcb518)
  creationTimestamp: null
  labels:
    io.kompose.service: web-app-client
  name: web-app-client
  namespace: default
spec:
  loadBalancerIP: 10.10.10.11
  ports:
  - name: '8080'
    port: 8080
    targetPort: 8080
  selector:
    io.kompose.service: web-app-client
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    dcw.kompose.service.loadbalancerip: 10.10.10.11
    dcw.svc_groups: web-apps,full
    kompose.cmd: kompose convert -f ./hacking/k8s.test-svc-web-app-client.yml.tmp.yml
      --stdout
    kompose.version: 1.30.0 (9d8dcb518)
  creationTimestamp: null
  labels:
    io.kompose.service: web-app-client
  name: web-app-client
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: web-app-client
  strategy: {}
  template:
    metadata:
      annotations:
        dcw.kompose.service.loadbalancerip: 10.10.10.11
        dcw.svc_groups: web-apps,full
        kompose.cmd: kompose convert -f ./hacking/k8s.test-svc-web-app-client.yml.tmp.yml
          --stdout
        kompose.version: 1.30.0 (9d8dcb518)
      creationTimestamp: null
      labels:
        io.kompose.network/hacking-check-net: 'true'
        io.kompose.service: web-app-client
    spec:
      containers:
      - env:
        - name: ACCESS_KEY
          value: '13121312'
        - name: RUNTIME_ENV
          value: dev
        - name: SECRET_KEY
        - name: run.profile
          value: dev
        image: web-app-client:latest
        name: web-app-client
        ports:
        - containerPort: 8080
          hostPort: 8080
          protocol: TCP
        resources: {}
      restartPolicy: Always
status: {}
